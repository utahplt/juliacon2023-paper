@article{goldbergWhatEveryComputer1991,
  title = {What Every Computer Scientist Should Know about Floating-Point Arithmetic},
  author = {Goldberg, David},
  year = {1991},
  month = mar,
  journal = {ACM Computing Surveys},
  volume = {23},
  number = {1},
  pages = {5--48},
  issn = {0360-0300, 1557-7341},
  doi = {10.1145/103162.103163},
  url = {https://dl.acm.org/doi/10.1145/103162.103163},
  urldate = {2023-04-21},
  abstract = {Floating-point arithmetic is considered as esoteric subject by many people. This is rather surprising, because floating-point is ubiquitous in computer systems: Almost every language has a floating-point datatype; computers from PCs to supercomputers have floating-point accelerators; most compilers will be called upon to compile floating-point algorithms from time to time; and virtually every operating system must respond to floating-point exceptions such as overflow. This paper presents a tutorial on the aspects of floating-point that have a direct impact on designers of computer systems. It begins with background on floating-point representation and rounding error, continues with a discussion of the IEEE floating point standard, and concludes with examples of how computer system builders can better support floating point.},
  langid = {english}
}

@incollection{heislerFinchDomainSpecific2022,
  title = {Finch: {{Domain Specific Language}} and {{Code Generation}} for {{Finite Element}} and {{Finite Volume}} in {{Julia}}},
  shorttitle = {Finch},
  booktitle = {Computational {{Science}} \textendash{} {{ICCS}} 2022},
  author = {Heisler, Eric and Deshmukh, Aadesh and Sundar, Hari},
  editor = {Groen, Derek and {de Mulatier}, Cl{\'e}lia and Paszynski, Maciej and Krzhizhanovskaya, Valeria V. and Dongarra, Jack J. and Sloot, Peter M. A.},
  year = {2022},
  volume = {13350},
  pages = {118--132},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-031-08751-6\_9},
  url = {https://link.springer.com/10.1007/978-3-031-08751-6_9},
  urldate = {2023-01-27},
  isbn = {978-3-031-08750-9 978-3-031-08751-6},
  langid = {english},
  file = {/Users/ashton/Zotero/storage/MKS3PE2A/Heisler et al. - 2022 - Finch Domain Specific Language and Code Generatio.pdf}
}

@article{IEEEStandardBinary1985,
  title = {{{IEEE Standard}} for {{Binary Floating-Point Arithmetic}}},
  year = {1985},
  month = oct,
  journal = {ANSI/IEEE Std 754-1985},
  pages = {1--20},
  doi = {10.1109/IEEESTD.1985.82928},
  abstract = {A family of commercially feasible ways for new systems to perform binary floating-point arithmetic is defined. This standard specifies basic and extended floating-point number formats; add, subtract, multiply, divide, square root, remainder, and compare operations; conversions between integer and floating-point formats; conversions between different floating-point formats; conversions between basic-format floating-point numbers and decimal strings; and floating-point exceptions and their handling, including nonnumbers.},
  keywords = {binary,Digital arithmetic,Floating-point arithmetic,Standards},
  file = {/Users/ashton/Zotero/storage/23TZFSYS/30711.html}
}

@phdthesis{klowerLowprecisionClimateComputing2021,
  type = {{{http://purl.org/dc/dcmitype/Text}}},
  title = {Low-Precision Climate Computing: Preserving Information despite Fewer Bits},
  shorttitle = {Low-Precision Climate Computing},
  author = {Kl{\"o}wer, Milan},
  year = {2021},
  url = {https://ora.ox.ac.uk/objects/uuid:1158e44a-7faf-45a0-8ab1-73c91fd694a6},
  urldate = {2023-05-12},
  abstract = {Progress towards more reliable weather and climate forecasts is limited by the resolution of numerical models and the complexity of simulated processes. Performance is therefore a major bottleneck and current models are not com- putationally efficient. High precision calculations are unnecessary, despite be- ing the standard, given the uncertainties in the climate system and the errors from discretisation, data assimilation and unresolved climate processes. In this thesis, we advance several aspects of low-precision climate computing to preserve information despite fewer bits: An information-preserving com- pression is developed that distinguishes between real and false information to reduce the very large volume of climate data produced by numerical mod- els, while minimising information loss. The bitwise real information content estimates the minimum required precision in climate data, which depends on the variable and is lower than the standard precision-levels of floating-point numbers. The impact of rounding errors introduced by different low-precision arithmetics with deterministic or stochastic rounding modes is analysed in chaotic dynamical systems. Standard floating-point numbers are not the best number format for weather and climate simulations. However, alternatives, such as posits, exist, but it is unclear whether the large effort needed to de- velop the respective hardware for future supercomputers is justified given the moderate advantage they provide in our applications. A much more central issue towards 16-bit climate models is the design of low precision-resilient al- gorithms. A naive transition to 16 bits either fails or was found to cause issues like amplified gravity waves, a change in geostrophy or rounding errors that grow as quickly as discretisation errors. However, many of these issues are found to be preventable with techniques such as scaling or a compensated time integration. Combining techniques, we develop a 16-bit fluid circulation model that approaches 4x speedups on Fujitsu's A64FX processor compared to 64 bits, despite minimal rounding errors. The result of this thesis show that there is little reason to assume that 16-bit weather and climate models are not possible. While the design of models to compute and output only the bitwise real information is challenging, it will be a major step towards computationally efficient digital twins of the Earth's climate system.},
  langid = {english},
  school = {University of Oxford},
  file = {/Users/ashton/Zotero/storage/FSU25ES8/Klöwer - 2021 - Low-precision climate computing preserving inform.pdf}
}

@article{klowerNumberFormatsError2020,
  title = {Number {{Formats}}, {{Error Mitigation}}, and {{Scope}} for 16-{{Bit Arithmetics}} in {{Weather}} and {{Climate Modeling Analyzed With}} a {{Shallow Water Model}}},
  author = {Kl{\"o}wer, M. and D{\"u}ben, P. D. and Palmer, T. N.},
  year = {2020},
  month = oct,
  journal = {Journal of Advances in Modeling Earth Systems},
  volume = {12},
  number = {10},
  issn = {1942-2466, 1942-2466},
  doi = {10.1029/2020MS002246},
  url = {https://onlinelibrary.wiley.com/doi/10.1029/2020MS002246},
  urldate = {2023-05-11},
  langid = {english},
  note = {This is one of the two papers in the ShallowWaters.jl README.},
  file = {/Users/ashton/Zotero/storage/JSGV7Q7D/Klöwer et al. - 2020 - Number Formats, Error Mitigation, and Scope for 16.pdf}
}

@inproceedings{klowerPositsAlternativeFloats2019,
  title = {Posits as an Alternative to Floats for Weather and Climate Models},
  booktitle = {Proceedings of the {{Conference}} for {{Next Generation Arithmetic}} 2019},
  author = {Kl{\"o}wer, Milan and D{\"u}ben, Peter D. and Palmer, Tim N.},
  year = {2019},
  month = mar,
  pages = {1--8},
  publisher = {{ACM}},
  address = {{Singapore Singapore}},
  doi = {10.1145/3316279.3316281},
  url = {https://dl.acm.org/doi/10.1145/3316279.3316281},
  urldate = {2023-05-11},
  isbn = {978-1-4503-7139-1},
  langid = {english},
  note = {This is one of the two papers in the ShallowWaters.jl README.},
  file = {/Users/ashton/Zotero/storage/J6I289XK/Klöwer et al. - 2019 - Posits as an alternative to floats for weather and.pdf}
}

@book{knuthArtComputerProgramming1997,
  title = {The {{Art}} of {{Computer Programming}}, Volume 2: Seminumerical Algorithms},
  author = {Knuth, Donald Ervin},
  year = {1997},
  edition = {3rd},
  publisher = {{Addison-Wesley}},
  isbn = {978-0201896848},
  lccn = {QA76.6 .K64 1997},
  keywords = {Computer algorithms,Computer programming}
}

@misc{SciMLOrdinaryDiffEqJl,
  title = {{{SciML}}/{{OrdinaryDiffEq}}.Jl},
  url = {https://github.com/SciML/OrdinaryDiffEq.jl},
  urldate = {2023-04-18},
  abstract = {High performance ordinary differential equation (ODE) and differential-algebraic equation (DAE) solvers, including neural ordinary differential equations (neural ODEs) and scientific machine learni...},
  file = {/Users/ashton/Zotero/storage/NVQ2YJVC/OrdinaryDiffEq.html}
}

@article{torontoPracticallyAccurateFloatingPoint2014,
  title = {Practically {{Accurate Floating-Point Math}}},
  author = {Toronto, Neil and McCarthy, Jay},
  year = {2014},
  month = jul,
  journal = {Computing in Science \& Engineering},
  volume = {16},
  number = {4},
  pages = {80--95},
  issn = {1521-9615},
  doi = {10.1109/MCSE.2014.90},
  url = {http://ieeexplore.ieee.org/document/6879754/},
  urldate = {2023-03-14},
  langid = {english},
  file = {/Users/ashton/Zotero/storage/SAHMT9YY/Toronto and McCarthy - 2014 - Practically Accurate Floating-Point Math.pdf}
}

@inproceedings{adka-cgo-2023,
author = {Ahrens, Willow and Donenfeld, Daniel and Kjolstad, Fredrik and Amarasinghe, Saman},
title = {{Looplets}: A Language for Structured Coiteration},
publisher = {{ACM}},
doi = {10.1145/3579990.3580020},
booktitle = {{CGO}},
pages = {41--54},
year = {2023}
}

@article{fenics,
  title     = {The {FEniCS} Project Version 1.5},
  author    = {M. S. Alnaes and J. Blechta and J. Hake and A. Johansson and B.  Kehlet and A. Logg and C. Richardson and J. Ring and M. E. Rognes and G. N.  Wells},
  journal   = {Archive of Numerical Software},
  year      = {2015},
  volume    = {3},
  doi       = {10.11588/ans.2015.100.20553},
}

@inproceedings{openfoam,
author = {Maci\`{a}, Sandra and Mart\'{\i}nez-Ferrer, Pedro J. and Mateo, Sergi and Beltran, Vicen\c{c} and Ayguad\'{e}, Eduard},
title = {Assembling a High-Productivity {DSL} for Computational Fluid Dynamics},
publisher = {{ACM}},
doi = {10.1145/3324989.3325721},
booktitle = {{PASC}},
articleno = {11},
numpages = {11},
year = {2019}
}

@online{dune,
  author={Dune},
  title={{DUNE} Numerics},
  url={https://www.dune-project.org/},
  urldate={2023-06-06}
}

@article{firedrake,
author = {Rathgeber, Florian and Ham, David A. and Mitchell, Lawrence and Lange, Michael and Luporini, Fabio and Mcrae, Andrew T. T. and Bercea, Gheorghe-Teodor and Markall, Graham R. and Kelly, Paul H. J.},
title = {{Firedrake}: Automating the Finite Element Method by Composing Abstractions},
publisher = {{ACM}},
volume = {43},
number = {3},
doi = {10.1145/2998441},
journal = {Transactions on Mathematical Software},
month = {dec},
articleno = {24},
numpages = {27},
year = {2016}
}

@article{freefem,
  AUTHOR = {Hecht, F.},
  TITLE = {New development in {FreeFem++}},
  JOURNAL = {Journal of Numerical Mathematics},
  VOLUME = {20},
  YEAR = {2012},
  NUMBER = {3-4},
  PAGES = {251--265},
  ISSN = {1570-2820},
  MRCLASS = {65Y15},
  MRNUMBER = {3043640},
  URL = {https://freefem.org/}
}

@inproceedings{dendro,
author = {Fernando, Milinda and Neilsen, David and Hirschmann, Eric W. and Sundar, Hari},
title = {A Scalable Framework for Adaptive Computational General Relativity on Heterogeneous Clusters},
publisher = {{ACM}},
doi = {10.1145/3330345.3330346},
booktitle = {{SC}},
pages = {1–12},
year = {2019}
}

@article{sdjmrstp-pc-2022,
  title={Linear solvers for power grid optimization problems: A review of {GPU}-accelerated linear solvers},
  author={{\'S}wirydowicz, Kasia and Darve, Eric and Jones, Wesley and Maack, Jonathan and Regev, Shaked and Saunders, Michael A and Thomas, Stephen J and Pele{\v{s}}, Slaven},
  journal={Parallel Computing},
  volume={111},
  pages={102870},
  year={2022},
  publisher={Elsevier}
}

@inproceedings{ddghlllprr-correctness-2022,
  author       = {James Demmel and Jack J. Dongarra and Mark Gates and Greg Henry and Julien Langou and Xiaoye S. Li and Piotr Luszczek and Weslley S. Pereira and E. Jason Riedy and Cindy Rubio{-}Gonz{\'{a}}lez},
  editor       = {Ignacio Laguna and
                  Cindy Rubio{-}Gonz{\'{a}}lez},
  title        = {Proposed Consistent Exception Handling for the {BLAS} and {LAPACK}},
  booktitle    = {{Correctness@SC}},
  pages        = {1--9},
  publisher    = {{IEEE}},
  doi          = {10.1109/Correctness56720.2022.00006},
  year         = {2022}
}

@inproceedings{gllprt-correctness-2021,
  author       = {Ganesh Gopalakrishnan and Ignacio Laguna and Ang Li and Pavel Panchekha and Cindy Rubio{-}Gonz{\'{a}}lez and Zachary Tatlock},
  title        = {Guarding Numerics Amidst Rising Heterogeneity},
  booktitle    = {{Correctness@SC}},
  pages        = {9--15},
  publisher    = {{IEEE}},
  doi          = {10.1109/Correctness54621.2021.00007},
  year         = {2021}
}

@online{fpchecker-reports,
  author={{FPChecker}},
  title={Open Source Reports},
  url={https://fpchecker.org/open-source-reports.html},
  urldate={2023-06-16}
}

@inproceedings{llg-soap-2022,
  author       = {Ignacio Laguna and Xinyi Li and Ganesh Gopalakrishnan},
  title        = {{BinFPE}: accurate floating-point exception detection for {GPU} applications},
  booktitle    = {{SOAP}},
  pages        = {1--8},
  publisher    = {{ACM}},
  doi          = {10.1145/3520313.3534655},
  year         = {2022}
}

@inproceedings{bllmg-xloop-2022,
  author       = {Dorra {Ben Khalifa} and Xinyi Li and Ignacio Laguna and Matthieu Martel and Ganesh Gopalakrishnan},
  title        = {Toward Increasing Trust in Exascale Simulations},
  booktitle    = {{XLOOP}},
  pages        = {26--31},
  publisher    = {{IEEE}},
  doi          = {10.1109/XLOOP56614.2022.00010},
  year         = {2022}
}

@ARTICLE{hmbdrg-cse-2014,
  author={Humphrey, Alan and Meng, Qingyu and Berzins, Martin and de Oliveira, Diego Caminha B. and Rakamaric, Zvonimir and Gopalakrishnan, Ganesh},
  journal={Computing in Science \& Engineering}, 
  title={Systematic Debugging Methods for Large-Scale {HPC} Computational Frameworks}, 
  year={2014},
  volume={16},
  number={3},
  pages={48--56},
  doi={10.1109/MCSE.2014.11}
}

@online{github-issues,
  author={{GitHub}},
  title={Issue Search: \texttt{NaN+infinity}},
  url={https://github.com/search?q=NaN+infinity++state%3Aopen&type=issues&ref=advsearch},
  urldate={2023-06-16}
}

@inproceedings{llsflg-hpdc-2023,
author = {Xinyi Li and Ignacio Laguna and Katarzyna Swirydowicz and Bo Fang and Ang Li and Ganesh Gopalakrishnan},
title = {Design and Evaluation of {GPU-FPX}: A Low-Overhead tool for Floating-Point Exception Detection in {NVIDIA GPUs}},
booktitle = {ACM HPDC 2023 (the 32nd International Symposium on High-Performance Parallel and Distributed Computing)},
month = jun,
year = 2023,
url = {https://www.osti.gov//servlets/purl/1989443},
doi = {10.11578/dc.20230713.4},
url = {https://www.osti.gov/biblio/1989443}}

@article{OceananigansJOSS,
  doi = {10.21105/joss.02018},
  year = {2020},
  publisher = {The Open Journal},
  volume = {5},
  number = {53},
  pages = {2018},
  author = {Ali Ramadhan and Gregory LeClaire Wagner and Chris Hill and Jean-Michel Campin and Valentin Churavy and Tim Besard and Andre Souza and Alan Edelman and Raffaele Ferrari and John Marshall},
  title = {{Oceananigans.jl: Fast and friendly geophysical fluid dynamics on GPUs}},
  journal = {Journal of Open Source Software}
}

@inproceedings{l-ase-2019,
  author       = {Ignacio Laguna},
  title        = {{FPChecker}: Detecting Floating-Point Exceptions in {GPU} Applications},
  booktitle    = {{ASE}},
  pages        = {1126--1129},
  publisher    = {{IEEE}},
  doi          = {10.1109/ASE.2019.00118},
  year         = {2019}
}

@inproceedings{ltlg-iiswc-2022,
  author       = {Ignacio Laguna and Tanmay Tirpankar and Xinyi Li and Ganesh Gopalakrishnan},
  title        = {{FPChecker}: Floating-Point Exception Detection Tool and Benchmark for
                  Parallel and Distributed {HPC}},
  booktitle    = {{IISWC}},
  pages        = {39--50},
  publisher    = {{IEEE}},
  doi          = {10.1109/IISWC55918.2022.00014},
  year         = {2022}
}

@software{kMilanklSherlogsJl2021,
  title = {Milankl/{{Sherlogs}}.Jl: V0.2.0},
  shorttitle = {Milankl/{{Sherlogs}}.Jl},
  author = {Kl{\"o}wer, Milan and {OnButtonUp}},
  date = {2021-07-20},
  doi = {10.5281/ZENODO.5115765},
  url = {https://zenodo.org/record/5115765},
  urldate = {2023-08-01},
  abstract = {Sherlogs v0.2.0 Diff since v0.1.0 {$<$}strong{$>$}Closed issues:{$<$}/strong{$>$} register (\#11) {$<$}strong{$>$}Merged pull requests:{$<$}/strong{$>$} Ambiguity (\#10) (@milankl) Ambiguity (\#12) (@milankl) Watson (\#13) (@milankl) Update test script. (\#14) (@onButtonUp) github action ci (\#16) (@milankl) DrWatson16/32 implemented (\#17) (@milankl) logbook interface, min max (\#18) (@milankl)},
  organization = {{Zenodo}},
  version = {v0.2.0}
}

@article{humphreySystematicDebuggingMethods2014,
  title = {Systematic {{Debugging Methods}} for {{Large-Scale HPC Computational Frameworks}}},
  author = {Humphrey, Alan and Meng, Qingyu and Berzins, Martin and De Oliveira, Diego Caminha B. and Rakamaric, Zvonimir and Gopalakrishnan, Ganesh},
  date = {2014-05},
  journaltitle = {Computing in Science \& Engineering},
  shortjournal = {Comput. Sci. Eng.},
  volume = {16},
  number = {3},
  pages = {48--56},
  issn = {1521-9615, 1558-366X},
  doi = {10.1109/MCSE.2014.11},
  url = {https://ieeexplore.ieee.org/document/6729885/},
  urldate = {2023-08-02},
  abstract = {Parallel computational frameworks for high performance computing (HPC) are central to the advancement of simulation based studies in science and engineering. Unfortunately, finding and fixing bugs in these frameworks can be extremely time consuming. Left unchecked, these bugs can drastically diminish the amount of new science that can be performed. This paper presents our systematic study of the Uintah Computational Framework, and our approaches to debug it more incisively. Our key insight is to leverage the modular structure of Uintah which lends itself to systematic debugging. In particular, we have developed a new approach based on Coalesced Stack Trace Graphs (CSTGs) that summarize the system behavior in terms of key control flows manifested through function invocation chains. We illustrate several scenarios how CSTGs could help efficiently localize bugs, and present a case study of how we found and fixed a real Uintah bug using CSTGs.},
  file = {/Users/ashton/Zotero/storage/37MQ5W3U/Humphrey et al. - 2014 - Systematic Debugging Methods for Large-Scale HPC C.pdf}
}
